services:
  gluetun:
    image: qmcgaw/gluetun
    container_name: gluetun
    cap_add: [ NET_ADMIN ]
    environment:
      - VPN_SERVICE_PROVIDER=${VPN_SERVICE_PROVIDER:-surfshark}
      - VPN_TYPE=${VPN_TYPE:-wireguard}
      - WIREGUARD_PRIVATE_KEY=${WIREGUARD_PRIVATE_KEY}
      - WIREGUARD_ADDRESSES=${WIREGUARD_ADDRESSES:-10.14.0.2/16}
      - SERVER_COUNTRIES=${SERVER_COUNTRIES:-Estonia}
      # allow inbound ports through gluetun's firewall
      - VPN_INPUT_PORTS=5000,8880,6881
    ports:
      - "${QB_WEBUI_PORT:-8880}:8880/tcp"
      - "${TORRENT_PORT:-6881}:6881/tcp"
      - "${TORRENT_PORT:-6881}:6881/udp"
      - "${FLASK_PORT:-5000}:5000"
    volumes:
      - ./gluetun:/gluetun
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "https://google.com"]
      interval: 10s
      timeout: 5s
      retries: 6

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    network_mode: "service:gluetun"
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-Etc/UTC}
      - WEBUI_PORT=${QB_WEBUI_PORT:-8880}
      - TORRENTING_PORT=${TORRENT_PORT:-6881}
    volumes:
      - ${DATA_DIR:-./data}/appdata:/config
      - ${DOWNLOAD_DIR:-./data}/downloads:/downloads
    depends_on:
       gluetun:
        condition: service_healthy
    restart: unless-stopped

  anime_watchlist:
    build: ./app
    container_name: anime_watchlist
    network_mode: "service:gluetun"
    environment:
      # since all share gluetun's netns, use localhost to reach qBittorrent
      - QBITTORRENT_HOST=127.0.0.1
      - QBITTORRENT_PORT=${QB_WEBUI_PORT:-8880}
      - QBITTORRENT_USERNAME=${QB_USERNAME:-admin}
      - QBITTORRENT_PASSWORD=${QB_PASSWORD:-adminadmin}
      - FLASK_PORT=${FLASK_PORT:-5000}
      - TZ=${TZ:-Etc/UTC}
      # optional scheduler globals:
      # - SCHEDULE_INTERVAL=1
      # - SCHEDULE_UNIT=hour
    volumes:
      - ${DATA_DIR:-./data}/anime_db:/app/data
    depends_on:
       gluetun:
        condition: service_healthy
    restart: unless-stopped
    # Healthcheck using Python (no curl/wget needed)
    healthcheck:
      test: ["CMD-SHELL", "python - << 'PY'\nimport socket,sys\ns=socket.socket();s.settimeout(2)\ntry:\n  s.connect(('127.0.0.1',5000)); s.close(); sys.exit(0)\nexcept Exception:\n  sys.exit(1)\nPY"]
      interval: 20s
      timeout: 5s
      retries: 3
